name: "terraform action file"
on: 
    push:
        branches:
            - main
            - stage
        paths:
            - terraform/**
            - .github/**
    pull_request:
        branches:
            - main
        paths:
            - terraform/**
env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    BUCKET_TF_STATE: ${{ secrets.BUCKET }}
    AWS_REGION: "us-east-1"
    EKS_CLUSTER: "vprofile-eks"
    
jobs:
    terraform:
        name: "apply terraform change"
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: bash
                working-directory: ./terraform
        steps:
          - name: git checkout
            uses: actions/checkout@v4

          - name: terraform install
            uses: hashicorp/setup-terraform@v3
            with:
                terraform_version: "1.6.3"

          - name: terraform init
            id: init
            run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

          - name: terraform fmt
            id: fmt
            run: terraform fmt -check

          - name: terraform validate
            id: validate
            run: terraform validate
          
          - name: terraform plan
            id: plan
            run: terraform plan -no-color -out PLANEFILE
          
          - name: terraform plan status
            if: steps.plan.outcome == 'failure'
            run: exit 1

          - name: terraform apply
            id: apply
            if: github.ref == 'refs/heads/main' && github.event_name == 'push'
            run: terraform apply -auto-approve -input=false -parallelism=1 PLANEFILE
            
          - name: Configure AWS Credentials
            uses: aws-actions/configure-aws-credentials@v1
            with:
              aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
              aws-region: ${{ env.AWS_REGION }}
          
          - name: GET kube config filr
            id: getconfig
            if: steps.apply.outcome == 'success'
            run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER }}

          - name: install ingress controller
            if: steps.apply.outcome == 'success' && steps.getconfig.outcome == 'success'
            run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.3/deploy/static/provider/aws/deploy.yaml
